{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "BugByte",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.number-sign.bugbyte",
					"match": "\\#.*$"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.while.bugbyte",
					"match": "\\b(while)\\b"
				},
				{
					"name": "keyword.control.exit.bugbyte",
					"match": "\\b(exit)\\b"
				},
				{
					"name": "keyword.operator.arithmetic.bugbyte",
					"match": "(?<!\\S)(\\+|\\-|\\*|\\/|\\%|\\^|\\||\\&)(?!\\S)"
				},
				{
					"name": "keyword.operator.comparison.bugbyte",
					"match": "(?<!\\S)(\\=|\\=\\=|\\!\\=|\\<|\\<\\=|\\>|\\>\\=)(?!\\S)"
				},
				{
					"name": "keyword.control.if.bugbyte",
					"match": "(\\?)(?!\\S)"
				},
				{
					"name": "keyword.control.if.branches.bugbyte",
					"match": "\\b(yes|no)\\:"
				},
				{
					"name": "keyword.control.using.bugbyte",
					"match": "\\b(using)\\b"
				},
				{
					"name": "keyword.control.syscall.bugbyte",
					"match": "\\b(syscall[0-6])\\b"
				},
				{
					"begin": "\\balloc\\[",
					"beginCaptures": {
						"0": {
							"name": "keyword.control.alloc.bugbyte"
						}
					},
					"patterns": [
						{
							"include": "$self"
						}
					],
					"end": "\\]",
					"endCaptures": {
						"0": {
							"name": "keyword.control.alloc.bugbyte"
						}
					}
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "keyword.other.include.bugbyte",
					"match": "\\b(include)\\b"
				},
				{
					"name": "constant.language.bugbyte",
					"match": "\\b(dup|drop|over|swap|print|prints|store|load(\\-byte)?)\\b"
				},
				{
					"name": "constant.numeric.bugbyte",
					"match": "\\b(\\d+)\\b"
				},
				{
					"name": "constant.other",
					"match": "\\b(yes|no)(?!:)\\b"
				},
				{
					"match": "\\b(aka)(\\s+([\\w\\-\\_]+)\\b)?",
					"captures": {
						"1": {
							"name": "keyword.other.aka.bugbyte"
						},
						"3": {
							"name": "variable.name.constant.bugbyte"
						}
					}
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.bugbyte",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.bugbyte",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.null.terminated.bugbyte",
					"begin": "0\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.bugbyte",
							"match": "\\\\."
						}
					]
				}
			]
		}
	},
	"scopeName": "source.bugbyte"
}
